let f : (a : int, b : int) -> int
let g : (a : real, b : real) -> () -> () -> real[]


let omg : (() -> real) -> real := @(a){
    a()
}


g := @(a, b) {
    return @() {
        return @() {
            {a, b}
        }
    }
}



var bob : (a : int[]) -> real[] := @(){
    return 4;
    return 4

    return 32
    return 2

    34
    56
    43
    return 1
    return 3;    32
    32
    12

    return 32
}s

struct bob {
    a : int, 
    b : real
}


class bob : tom {
    
    _() {

    }

    ~_() {

    }

    ~_() {
    
    }



    var a : int

    - var a : int
    + var b : int
}

let bob := @(x, y){x + y}


let b := @(x : real , y : real) {
    x + y
}





